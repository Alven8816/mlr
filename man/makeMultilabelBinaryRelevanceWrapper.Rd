% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/MultilabelBinaryRelevanceWrapper.R
\name{makeMultilabelBinaryRelevanceWrapper}
\alias{makeMultilabelBinaryRelevanceWrapper}
\title{Use binary relevance method to create a multilabel learner.}
\usage{
makeMultilabelBinaryRelevanceWrapper(learner)
}
\arguments{
\item{learner}{[\code{\link{Learner}} | \code{character(1)}]\cr
The learner.
If you pass a string the learner will be created via \code{\link{makeLearner}}.}
}
\value{
[\code{\link{Learner}}].
}
\description{
Every learner which is implemented in mlr and which supports binary
classification can be converted to a wrapped binary relevance multilabel learner.
The multilabel classification problem is converted into simple binary classifications
for each label/target on which the binary learner is applied.
}
\examples{
data = cbind(iris,
  y1 = sample(c(TRUE, FALSE), 150, replace = TRUE),
  y2 = sample(c(TRUE, FALSE), 150, replace = TRUE))
multilabel.task = makeMultilabelTask(id = "multi", data = data[-c(1:10),], target = c("y1", "y2"))
lrn = makeMultilabelBinaryRelevanceWrapper("classif.rpart")
# train, predict and evaluate
mod = train(lrn, multilabel.task)
pred = predict(mod, multilabel.task)
p = performance(pred)
# with newdata
pred = predict(mod, newdata = data[1:10,])
}
\seealso{
Other wrapper: \code{\link{CostSensClassifModel}},
  \code{\link{CostSensClassifWrapper}},
  \code{\link{makeCostSensClassifWrapper}};
  \code{\link{CostSensRegrModel}},
  \code{\link{CostSensRegrWrapper}},
  \code{\link{makeCostSensRegrWrapper}};
  \code{\link{makeBaggingWrapper}};
  \code{\link{makeDownsampleWrapper}};
  \code{\link{makeFeatSelWrapper}};
  \code{\link{makeFilterWrapper}};
  \code{\link{makeImputeWrapper}};
  \code{\link{makeMulticlassWrapper}};
  \code{\link{makeOverBaggingWrapper}};
  \code{\link{makeOversampleWrapper}},
  \code{\link{makeUndersampleWrapper}};
  \code{\link{makePreprocWrapperCaret}};
  \code{\link{makePreprocWrapper}};
  \code{\link{makeSMOTEWrapper}};
  \code{\link{makeTuneWrapper}};
  \code{\link{makeWeightedClassesWrapper}}
}

